#This document is used to record some useful commands for me
#Run man to see detailed info.
pkg-config - Return metainformation about installed libraries.

ps -f - list full list
ctrl+alt+F1 - change to command line
ctrl+alt+F7(tty7) - change to tty7. usually X is tty7
alt+print screen + k - restart X
pkill X - kill X

pdflatex -shell-escape myfile.tex
#solve the issue of pdflatex cannot find the eps-to-pdf file in subfolders

#awk
#judge if a duplicate field exist in a file; if an item in first column appears more than once
awk -F '[ \t]' 'FNR==NR {if($1 in a) a[$1]=a[$1]+1; else a[$1]=1;next} ($1 in a && a[$1]>1){print $1}' mem-layout.dat mem-layout.dat


##git##
how to set git without pasword
#https://help.github.com/articles/set-up-git
git config --global credential.helper 'cache --timeout=3600' #timeout 3600sec
#set user name
git config --global user.name "Your Name Here"
#set email 
git config --global user.email "your_email@example.com"

##git repository locally##
How to create a git repository locally
http://treeleaf.be/blog/2011/03/creating-a-new-git-repository-on-a-local-file-system/
Step 1) create remote repo. 
    mkdir /path/to/remote/repo/
    cd /path/to/remote/repo/
    git init --bare # bare measn it is remote repo
Step 2) create the local/working repo, which can be an existing project
    cd /path/to/local/working/repo
    git init 
    git remote add origin url:/path/to/remote/repo
    #then you can use git add/commit/push to push to remote repo.


##shell##
find -path "path/you/want/" -o -print #find the files under the path
find -path "path/to/ignore/" -prune -o -print #ignore the path when do find

#grep the keyword in all .h and .c files under current dir but exclude some directories
find . -type d \( -path "./stubdom/*" -o -path "./dist/*" \) -prune -o -regex '.*\.\(h\|c\)$'  -print | xargs grep map_foreign_range
#the following cmd also works; it avoid the problem when the path/filename has whitespace; In addition, it's more efficient because of appending "{} +"
find . -type d \( -path "./stubdom/" -o -path "./dist/" \) -prune -o -name '*.[ch]' -exec grep map_foreign_range {} +


##Xen##
#show the dependence of libraries
ldd `which xl`
#if some program's dependent lib is not detected but it's installed( you can check if it's there by `whereis lib-name`)
/sbin/ldconfig 
